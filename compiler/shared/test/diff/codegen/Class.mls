:NewParser
:NewDefs

log of "Class Test 1"
class One(first: Int)
let x = One(101)
class Two(first: Int, second: Int)
let y = Two(201,202)
log of x.first
log of y.first
log of y.second
//│ class One(first: Int)
//│ let x: One
//│ class Two(first: Int, second: Int)
//│ let y: Two
//│ undefined
//│ entry IR:
//│ Basic Block entry ():
//│   a1 = call log (Class Test 1)
//│   b = alloc One
//│   setfield b.first = 101
//│   c = b
//│   d = alloc Two
//│   setfield d.first = 201
//│   setfield d.second = 202
//│   e = d
//│   f = getfield c, first
//│   g1 = call log (f)
//│   h = getfield e, first
//│   i1 = call log (h)
//│   j = getfield e, second
//│   k1 = call log (j)
//│ 
//│ 
//│ WASM:
//│ (module 
//│   (import "system" "mem" (memory 100))
//│   (func $logI32 (import "system" "logI32") (param i32 i32))
//│   (func $logI64 (import "system" "logI64") (param i64))
//│   (func $logF64 (import "system" "logF64") (param f64))
//│   (global (mut i32) i32.const 0) 
//│   (export "main" (func $main))
//│   (func $main (local $e i32) (local $j i64) (local $f i64) (local $g1 i32) (local $i1 i32) (local $b i32) (local $k1 i32) (local $d i32) (local $c i32) (local $h i64) (local $a1 i32) 
//│     global.get 0
//│     i32.const 0
//│     i32.add
//│     i32.const 67
//│     i32.store8
//│     global.get 0
//│     i32.const 1
//│     i32.add
//│     i32.const 108
//│     i32.store8
//│     global.get 0
//│     i32.const 2
//│     i32.add
//│     i32.const 97
//│     i32.store8
//│     global.get 0
//│     i32.const 3
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 4
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 5
//│     i32.add
//│     i32.const 32
//│     i32.store8
//│     global.get 0
//│     i32.const 6
//│     i32.add
//│     i32.const 84
//│     i32.store8
//│     global.get 0
//│     i32.const 7
//│     i32.add
//│     i32.const 101
//│     i32.store8
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 9
//│     i32.add
//│     i32.const 116
//│     i32.store8
//│     global.get 0
//│     i32.const 10
//│     i32.add
//│     i32.const 32
//│     i32.store8
//│     global.get 0
//│     i32.const 11
//│     i32.add
//│     i32.const 49
//│     i32.store8
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 13
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 14
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 15
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     global.get 0
//│     i32.const 16
//│     i32.add
//│     global.set 0
//│     i32.const 4
//│     call $logI32
//│     i32.const 0
//│     local.set $a1
//│     global.get 0
//│     local.set $b
//│     global.get 0
//│     i32.const 1
//│     i32.store
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     global.set 0
//│     local.get $b
//│     i32.const 4
//│     i32.add
//│     i64.const 101
//│     i64.store
//│     local.get $b
//│     local.set $c
//│     global.get 0
//│     local.set $d
//│     global.get 0
//│     i32.const 0
//│     i32.store
//│     global.get 0
//│     i32.const 20
//│     i32.add
//│     global.set 0
//│     local.get $d
//│     i32.const 4
//│     i32.add
//│     i64.const 201
//│     i64.store
//│     local.get $d
//│     i32.const 12
//│     i32.add
//│     i64.const 202
//│     i64.store
//│     local.get $d
//│     local.set $e
//│     local.get $c
//│     i32.const 4
//│     i32.add
//│     i64.load
//│     local.set $f
//│     local.get $f
//│     call $logI64
//│     i32.const 0
//│     local.set $g1
//│     local.get $e
//│     i32.const 4
//│     i32.add
//│     i64.load
//│     local.set $h
//│     local.get $h
//│     call $logI64
//│     i32.const 0
//│     local.set $i1
//│     local.get $e
//│     i32.const 12
//│     i32.add
//│     i64.load
//│     local.set $j
//│     local.get $j
//│     call $logI64
//│     i32.const 0
//│     local.set $k1
//│   )
//│ )
//│ 
//│ res
//│     = undefined
//│ // Output
//│ Class Test 1
//│ x
//│   = One {}
//│ y
//│   = Two {}
//│ res
//│     = undefined
//│ // Output
//│ 101
//│ res
//│     = undefined
//│ // Output
//│ 201
//│ res
//│     = undefined
//│ // Output
//│ 202

log of "Class Test 2"
class Inside(value:Int)
class Outside(value:Int,inside:Inside)
let x = Inside(98)
let y = Outside(99,x)
log of x.value
log of y.value
log of y.inside.value
//│ class Inside(value: Int)
//│ class Outside(value: Int, inside: Inside)
//│ let x: Inside
//│ let y: Outside
//│ undefined
//│ entry IR:
//│ Basic Block entry ():
//│   a1 = call log (Class Test 2)
//│   b = alloc Inside
//│   setfield b.value = 98
//│   c = b
//│   d = alloc Outside
//│   setfield d.value = 99
//│   setfield d.inside = c
//│   e = d
//│   f = getfield c, value
//│   g1 = call log (f)
//│   h = getfield e, value
//│   i1 = call log (h)
//│   j = getfield e, inside
//│   k = getfield j, value
//│   l1 = call log (k)
//│ 
//│ 
//│ WASM:
//│ (module 
//│   (import "system" "mem" (memory 100))
//│   (func $logI32 (import "system" "logI32") (param i32 i32))
//│   (func $logI64 (import "system" "logI64") (param i64))
//│   (func $logF64 (import "system" "logF64") (param f64))
//│   (global (mut i32) i32.const 0) 
//│   (export "main" (func $main))
//│   (func $main (local $j i32) (local $f i64) (local $g1 i32) (local $i1 i32) (local $b i32) (local $k i64) (local $d i32) (local $e i32) (local $l1 i32) (local $c i32) (local $h i64) (local $a1 i32) 
//│     global.get 0
//│     i32.const 0
//│     i32.add
//│     i32.const 67
//│     i32.store8
//│     global.get 0
//│     i32.const 1
//│     i32.add
//│     i32.const 108
//│     i32.store8
//│     global.get 0
//│     i32.const 2
//│     i32.add
//│     i32.const 97
//│     i32.store8
//│     global.get 0
//│     i32.const 3
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 4
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 5
//│     i32.add
//│     i32.const 32
//│     i32.store8
//│     global.get 0
//│     i32.const 6
//│     i32.add
//│     i32.const 84
//│     i32.store8
//│     global.get 0
//│     i32.const 7
//│     i32.add
//│     i32.const 101
//│     i32.store8
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 9
//│     i32.add
//│     i32.const 116
//│     i32.store8
//│     global.get 0
//│     i32.const 10
//│     i32.add
//│     i32.const 32
//│     i32.store8
//│     global.get 0
//│     i32.const 11
//│     i32.add
//│     i32.const 50
//│     i32.store8
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 13
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 14
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 15
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     global.get 0
//│     i32.const 16
//│     i32.add
//│     global.set 0
//│     i32.const 4
//│     call $logI32
//│     i32.const 0
//│     local.set $a1
//│     global.get 0
//│     local.set $b
//│     global.get 0
//│     i32.const 0
//│     i32.store
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     global.set 0
//│     local.get $b
//│     i32.const 4
//│     i32.add
//│     i64.const 98
//│     i64.store
//│     local.get $b
//│     local.set $c
//│     global.get 0
//│     local.set $d
//│     global.get 0
//│     i32.const 1
//│     i32.store
//│     global.get 0
//│     i32.const 16
//│     i32.add
//│     global.set 0
//│     local.get $d
//│     i32.const 4
//│     i32.add
//│     i64.const 99
//│     i64.store
//│     local.get $d
//│     i32.const 12
//│     i32.add
//│     local.get $c
//│     i32.store
//│     local.get $d
//│     local.set $e
//│     local.get $c
//│     i32.const 4
//│     i32.add
//│     i64.load
//│     local.set $f
//│     local.get $f
//│     call $logI64
//│     i32.const 0
//│     local.set $g1
//│     local.get $e
//│     i32.const 4
//│     i32.add
//│     i64.load
//│     local.set $h
//│     local.get $h
//│     call $logI64
//│     i32.const 0
//│     local.set $i1
//│     local.get $e
//│     i32.const 12
//│     i32.add
//│     i32.load
//│     local.set $j
//│     local.get $j
//│     i32.const 4
//│     i32.add
//│     i64.load
//│     local.set $k
//│     local.get $k
//│     call $logI64
//│     i32.const 0
//│     local.set $l1
//│   )
//│ )
//│ 
//│ res
//│     = undefined
//│ // Output
//│ Class Test 2
//│ x
//│   = Inside {}
//│ y
//│   = Outside {}
//│ res
//│     = undefined
//│ // Output
//│ 98
//│ res
//│     = undefined
//│ // Output
//│ 99
//│ res
//│     = undefined
//│ // Output
//│ 98

log of "Class Test 3"
class One(first: Int)
log of One(111).first
//│ class One(first: Int)
//│ undefined
//│ entry IR:
//│ Basic Block entry ():
//│   a1 = call log (Class Test 3)
//│   b = alloc One
//│   setfield b.first = 111
//│   c = getfield b, first
//│   d1 = call log (c)
//│ 
//│ 
//│ WASM:
//│ (module 
//│   (import "system" "mem" (memory 100))
//│   (func $logI32 (import "system" "logI32") (param i32 i32))
//│   (func $logI64 (import "system" "logI64") (param i64))
//│   (func $logF64 (import "system" "logF64") (param f64))
//│   (global (mut i32) i32.const 0) 
//│   (export "main" (func $main))
//│   (func $main (local $a1 i32) (local $b i32) (local $c i64) (local $d1 i32) 
//│     global.get 0
//│     i32.const 0
//│     i32.add
//│     i32.const 67
//│     i32.store8
//│     global.get 0
//│     i32.const 1
//│     i32.add
//│     i32.const 108
//│     i32.store8
//│     global.get 0
//│     i32.const 2
//│     i32.add
//│     i32.const 97
//│     i32.store8
//│     global.get 0
//│     i32.const 3
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 4
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 5
//│     i32.add
//│     i32.const 32
//│     i32.store8
//│     global.get 0
//│     i32.const 6
//│     i32.add
//│     i32.const 84
//│     i32.store8
//│     global.get 0
//│     i32.const 7
//│     i32.add
//│     i32.const 101
//│     i32.store8
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 9
//│     i32.add
//│     i32.const 116
//│     i32.store8
//│     global.get 0
//│     i32.const 10
//│     i32.add
//│     i32.const 32
//│     i32.store8
//│     global.get 0
//│     i32.const 11
//│     i32.add
//│     i32.const 51
//│     i32.store8
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 13
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 14
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 15
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     global.get 0
//│     i32.const 16
//│     i32.add
//│     global.set 0
//│     i32.const 4
//│     call $logI32
//│     i32.const 0
//│     local.set $a1
//│     global.get 0
//│     local.set $b
//│     global.get 0
//│     i32.const 0
//│     i32.store
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     global.set 0
//│     local.get $b
//│     i32.const 4
//│     i32.add
//│     i64.const 111
//│     i64.store
//│     local.get $b
//│     i32.const 4
//│     i32.add
//│     i64.load
//│     local.set $c
//│     local.get $c
//│     call $logI64
//│     i32.const 0
//│     local.set $d1
//│   )
//│ )
//│ 
//│ res
//│     = undefined
//│ // Output
//│ Class Test 3
//│ res
//│     = undefined
//│ // Output
//│ 111

log of "Class Test 4"
class IntLit(value:Int)
let x = IntLit(10)
log(x.value)
class StringLit(value:Str)
let y = StringLit("MLscript")
log(y.value)
class BooleanLit(value:Bool)
let z = BooleanLit(true)
log(z.value)
//│ class IntLit(value: Int)
//│ let x: IntLit
//│ class StringLit(value: Str)
//│ let y: StringLit
//│ class BooleanLit(value: Bool)
//│ let z: BooleanLit
//│ undefined
//│ entry IR:
//│ Basic Block entry ():
//│   a1 = call log (Class Test 4)
//│   b = alloc IntLit
//│   setfield b.value = 10
//│   c = b
//│   d = getfield c, value
//│   e1 = call log (d)
//│   f = alloc StringLit
//│   setfield f.value = MLscript
//│   g = f
//│   h = getfield g, value
//│   i1 = call log (h)
//│   j = alloc BooleanLit
//│   setfield j.value = true
//│   k = j
//│   l = getfield k, value
//│   m1 = call log (l)
//│ 
//│ 
//│ WASM:
//│ (module 
//│   (import "system" "mem" (memory 100))
//│   (func $logI32 (import "system" "logI32") (param i32 i32))
//│   (func $logI64 (import "system" "logI64") (param i64))
//│   (func $logF64 (import "system" "logF64") (param f64))
//│   (global (mut i32) i32.const 0) 
//│   (export "main" (func $main))
//│   (func $main (local $e1 i32) (local $j i32) (local $f i32) (local $m1 i32) (local $i1 i32) (local $b i32) (local $k i32) (local $d i64) (local $g i32) (local $l i32) (local $c i32) (local $h i32) (local $a1 i32) 
//│     global.get 0
//│     i32.const 0
//│     i32.add
//│     i32.const 67
//│     i32.store8
//│     global.get 0
//│     i32.const 1
//│     i32.add
//│     i32.const 108
//│     i32.store8
//│     global.get 0
//│     i32.const 2
//│     i32.add
//│     i32.const 97
//│     i32.store8
//│     global.get 0
//│     i32.const 3
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 4
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 5
//│     i32.add
//│     i32.const 32
//│     i32.store8
//│     global.get 0
//│     i32.const 6
//│     i32.add
//│     i32.const 84
//│     i32.store8
//│     global.get 0
//│     i32.const 7
//│     i32.add
//│     i32.const 101
//│     i32.store8
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 9
//│     i32.add
//│     i32.const 116
//│     i32.store8
//│     global.get 0
//│     i32.const 10
//│     i32.add
//│     i32.const 32
//│     i32.store8
//│     global.get 0
//│     i32.const 11
//│     i32.add
//│     i32.const 52
//│     i32.store8
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 13
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 14
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 15
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     global.get 0
//│     i32.const 16
//│     i32.add
//│     global.set 0
//│     i32.const 4
//│     call $logI32
//│     i32.const 0
//│     local.set $a1
//│     global.get 0
//│     local.set $b
//│     global.get 0
//│     i32.const 0
//│     i32.store
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     global.set 0
//│     local.get $b
//│     i32.const 4
//│     i32.add
//│     i64.const 10
//│     i64.store
//│     local.get $b
//│     local.set $c
//│     local.get $c
//│     i32.const 4
//│     i32.add
//│     i64.load
//│     local.set $d
//│     local.get $d
//│     call $logI64
//│     i32.const 0
//│     local.set $e1
//│     global.get 0
//│     local.set $f
//│     global.get 0
//│     i32.const 1
//│     i32.store
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     global.set 0
//│     local.get $f
//│     i32.const 4
//│     i32.add
//│     global.get 0
//│     i32.const 0
//│     i32.add
//│     i32.const 77
//│     i32.store8
//│     global.get 0
//│     i32.const 1
//│     i32.add
//│     i32.const 76
//│     i32.store8
//│     global.get 0
//│     i32.const 2
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 3
//│     i32.add
//│     i32.const 99
//│     i32.store8
//│     global.get 0
//│     i32.const 4
//│     i32.add
//│     i32.const 114
//│     i32.store8
//│     global.get 0
//│     i32.const 5
//│     i32.add
//│     i32.const 105
//│     i32.store8
//│     global.get 0
//│     i32.const 6
//│     i32.add
//│     i32.const 112
//│     i32.store8
//│     global.get 0
//│     i32.const 7
//│     i32.add
//│     i32.const 116
//│     i32.store8
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 9
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 10
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 11
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     global.set 0
//│     i32.store
//│     local.get $f
//│     local.set $g
//│     local.get $g
//│     i32.const 4
//│     i32.add
//│     i32.load
//│     local.set $h
//│     local.get $h
//│     i32.const 4
//│     call $logI32
//│     i32.const 0
//│     local.set $i1
//│     global.get 0
//│     local.set $j
//│     global.get 0
//│     i32.const 2
//│     i32.store
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     global.set 0
//│     local.get $j
//│     i32.const 4
//│     i32.add
//│     i32.const 1
//│     i32.store
//│     local.get $j
//│     local.set $k
//│     local.get $k
//│     i32.const 4
//│     i32.add
//│     i32.load
//│     local.set $l
//│     local.get $l
//│     i32.const 1
//│     call $logI32
//│     i32.const 0
//│     local.set $m1
//│   )
//│ )
//│ 
//│ res
//│     = undefined
//│ // Output
//│ Class Test 4
//│ x
//│   = IntLit {}
//│ res
//│     = undefined
//│ // Output
//│ 10
//│ y
//│   = StringLit {}
//│ res
//│     = undefined
//│ // Output
//│ MLscript
//│ z
//│   = BooleanLit {}
//│ res
//│     = undefined
//│ // Output
//│ true
