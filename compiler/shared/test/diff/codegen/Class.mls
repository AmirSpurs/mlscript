:NewParser
:NewDefs

class One(first: Int)
let x = One(101)
class Two(first: Int, second: Int)
let y = Two(201,202)
//│ class One(first: Int)
//│ let x: One
//│ class Two(first: Int, second: Int)
//│ let y: Two
//│ entry IR:
//│ Basic Block entry ():
//│   a = alloc One
//│   setfield a.first = 101
//│   x1 = a
//│   b = alloc Two
//│   setfield b.second = 201
//│   setfield b.first = 202
//│   y1 = b
//│ 
//│ 
//│ WASM:
//│ (module 
//│   (import "system" "mem" (memory 100))
//│ 
//│   (global (mut i32) i32.const 0) 
//│   (export "main" (func $main))
//│   (func $main (local $a i32)(local $b i32)(local $y1 i32)(local $x1 i32)
//│     global.get 0
//│     local.set $a
//│     global.get 0
//│     i32.const 1
//│     i32.store
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     global.set 0
//│     local.get $a
//│     i32.const 4
//│     i32.add
//│     i32.const 101
//│     i32.store
//│     local.get $a
//│     local.set $x1
//│     global.get 0
//│     local.set $b
//│     global.get 0
//│     i32.const 0
//│     i32.store
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     global.set 0
//│     local.get $b
//│     i32.const 4
//│     i32.add
//│     i32.const 201
//│     i32.store
//│     local.get $b
//│     i32.const 8
//│     i32.add
//│     i32.const 202
//│     i32.store
//│     local.get $b
//│     local.set $y1
//│   )
//│   (start $main)
//│ )
//│ 
//│ x
//│   = One {}
//│ y
//│   = Two {}

class Inside(value:Int)
class Outside(value:Int,inside:Inside)
let x = Outside(99,Inside(98))
//│ class Inside(value: Int)
//│ class Outside(value: Int, inside: Inside)
//│ let x: Outside
//│ entry IR:
//│ Basic Block entry ():
//│   a = alloc Inside
//│   setfield a.value = 98
//│   b = alloc Outside
//│   setfield b.inside = 99
//│   setfield b.value = a
//│   x1 = b
//│ 
//│ 
//│ WASM:
//│ (module 
//│   (import "system" "mem" (memory 100))
//│ 
//│   (global (mut i32) i32.const 0) 
//│   (export "main" (func $main))
//│   (func $main (local $a i32)(local $b i32)(local $x1 i32)
//│     global.get 0
//│     local.set $a
//│     global.get 0
//│     i32.const 0
//│     i32.store
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     global.set 0
//│     local.get $a
//│     i32.const 4
//│     i32.add
//│     i32.const 98
//│     i32.store
//│     global.get 0
//│     local.set $b
//│     global.get 0
//│     i32.const 1
//│     i32.store
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     global.set 0
//│     local.get $b
//│     i32.const 4
//│     i32.add
//│     i32.const 99
//│     i32.store
//│     local.get $b
//│     i32.const 8
//│     i32.add
//│     local.get $a
//│     i32.store
//│     local.get $b
//│     local.set $x1
//│   )
//│   (start $main)
//│ )
//│ 
//│ x
//│   = Outside {}

class One(first: Int)
log of One(111).first
//│ class One(first: Int)
//│ undefined
//│ entry IR:
//│ Basic Block entry ():
//│   a = alloc One
//│   setfield a.first = 111
//│   b = getfield a, first
//│   c1 = call log (b)
//│ 
//│ 
//│ WASM:
//│ (module 
//│   (import "system" "mem" (memory 100))
//│   (func $log (import "system" "log") (param i32 i32))
//│   (global (mut i32) i32.const 0) 
//│   (export "main" (func $main))
//│   (func $main (local $a i32)(local $b i32)(local $c1 i32)
//│     global.get 0
//│     local.set $a
//│     global.get 0
//│     i32.const 0
//│     i32.store
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     global.set 0
//│     local.get $a
//│     i32.const 4
//│     i32.add
//│     i32.const 111
//│     i32.store
//│     local.get $a
//│     i32.const 4
//│     i32.add
//│     i32.load
//│     local.set $b
//│     local.get $b
//│     i32.const 2
//│     call $log
//│     i32.const 0
//│     local.set $c1
//│   )
//│   (start $main)
//│ )
//│ 
//│ res
//│     = undefined
//│ // Output
//│ 111

class IntLit(value:Int)
let x = IntLit(10)
log(x.value)
class StringLit(value:Str)
let y = StringLit("MLscript")
log(y.value)
class BooleanLit(value:Bool)
let z = BooleanLit(true)
log(z.value)
//│ class IntLit(value: Int)
//│ let x: IntLit
//│ class StringLit(value: Str)
//│ let y: StringLit
//│ class BooleanLit(value: Bool)
//│ let z: BooleanLit
//│ undefined
//│ entry IR:
//│ Basic Block entry ():
//│   a = alloc IntLit
//│   setfield a.value = 10
//│   x1 = a
//│   b = getfield x1, value
//│   c1 = call log (b)
//│   d = alloc StringLit
//│   setfield d.value = MLscript
//│   y1 = d
//│   e = getfield y1, value
//│   f1 = call log (e)
//│   g = alloc BooleanLit
//│   setfield g.value = true
//│   z1 = g
//│   h = getfield z1, value
//│   i1 = call log (h)
//│ 
//│ 
//│ WASM:
//│ (module 
//│   (import "system" "mem" (memory 100))
//│   (func $log (import "system" "log") (param i32 i32))
//│   (global (mut i32) i32.const 0) 
//│   (export "main" (func $main))
//│   (func $main (local $e i32)(local $f1 i32)(local $a i32)(local $z1 i32)(local $b i32)(local $x1 i32)(local $h i32)(local $d i32)(local $c1 i32)(local $i1 i32)(local $g i32)(local $y1 i32)
//│     global.get 0
//│     local.set $a
//│     global.get 0
//│     i32.const 0
//│     i32.store
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     global.set 0
//│     local.get $a
//│     i32.const 4
//│     i32.add
//│     i32.const 10
//│     i32.store
//│     local.get $a
//│     local.set $x1
//│     local.get $x1
//│     i32.const 4
//│     i32.add
//│     i32.load
//│     local.set $b
//│     local.get $b
//│     i32.const 2
//│     call $log
//│     i32.const 0
//│     local.set $c1
//│     global.get 0
//│     local.set $d
//│     global.get 0
//│     i32.const 1
//│     i32.store
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     global.set 0
//│     local.get $d
//│     i32.const 4
//│     i32.add
//│     global.get 0
//│     i32.const 0
//│     i32.add
//│     i32.const 77
//│     i32.store8
//│     global.get 0
//│     i32.const 1
//│     i32.add
//│     i32.const 76
//│     i32.store8
//│     global.get 0
//│     i32.const 2
//│     i32.add
//│     i32.const 115
//│     i32.store8
//│     global.get 0
//│     i32.const 3
//│     i32.add
//│     i32.const 99
//│     i32.store8
//│     global.get 0
//│     i32.const 4
//│     i32.add
//│     i32.const 114
//│     i32.store8
//│     global.get 0
//│     i32.const 5
//│     i32.add
//│     i32.const 105
//│     i32.store8
//│     global.get 0
//│     i32.const 6
//│     i32.add
//│     i32.const 112
//│     i32.store8
//│     global.get 0
//│     i32.const 7
//│     i32.add
//│     i32.const 116
//│     i32.store8
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 9
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 10
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     i32.const 11
//│     i32.add
//│     i32.const 0
//│     i32.store8
//│     global.get 0
//│     global.get 0
//│     i32.const 12
//│     i32.add
//│     global.set 0
//│     i32.store
//│     local.get $d
//│     local.set $y1
//│     local.get $y1
//│     i32.const 4
//│     i32.add
//│     i32.load
//│     local.set $e
//│     local.get $e
//│     i32.const 4
//│     call $log
//│     i32.const 0
//│     local.set $f1
//│     global.get 0
//│     local.set $g
//│     global.get 0
//│     i32.const 2
//│     i32.store
//│     global.get 0
//│     i32.const 8
//│     i32.add
//│     global.set 0
//│     local.get $g
//│     i32.const 4
//│     i32.add
//│     i32.const 1
//│     i32.store
//│     local.get $g
//│     local.set $z1
//│     local.get $z1
//│     i32.const 4
//│     i32.add
//│     i32.load
//│     local.set $h
//│     local.get $h
//│     i32.const 1
//│     call $log
//│     i32.const 0
//│     local.set $i1
//│   )
//│   (start $main)
//│ )
//│ 
//│ x
//│   = IntLit {}
//│ res
//│     = undefined
//│ // Output
//│ 10
//│ y
//│   = StringLit {}
//│ res
//│     = undefined
//│ // Output
//│ MLscript
//│ z
//│   = BooleanLit {}
//│ res
//│     = undefined
//│ // Output
//│ true
