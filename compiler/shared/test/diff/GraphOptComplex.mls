:NewParser
:ParseOnly

:GOInterp
:GraphOpt
class A(x, y, z)
class B(m, n)
fun complex_foo(t) =
  let r = if t is
    A(x, y, z) then x + y * z
    B(m, n) then m - n
  let s = B(1, 2)
  let u = if s is
    A(x, y, z) then 3
    B(m, n) then 4
  r + u
fun bar() =
  complex_foo(A(6, 7, 8))
  complex_foo(B(9, 10))
bar()
//│ |#class| |A|(|x|,| |y|,| |z|)|↵|#class| |B|(|m|,| |n|)|↵|#fun| |complex_foo|(|t|)| |#=|→|#let| |r| |#=| |#if| |t| |is|→|A|(|x|,| |y|,| |z|)| |#then| |x| |+| |y| |*| |z|↵|B|(|m|,| |n|)| |#then| |m| |-| |n|←|↵|#let| |s| |#=| |B|(|1|,| |2|)|↵|#let| |u| |#=| |#if| |s| |is|→|A|(|x|,| |y|,| |z|)| |#then| |3|↵|B|(|m|,| |n|)| |#then| |4|←|↵|r| |+| |u|←|↵|#fun| |bar|(||)| |#=|→|complex_foo|(|A|(|6|,| |7|,| |8|)|)|↵|complex_foo|(|B|(|9|,| |10|)|)|←|↵|bar|(||)|
//│ Parsed: {class A(x, y, z,) {}; class B(m, n,) {}; fun complex_foo = (t,) => {let r = if t is ‹(A(x, y, z,)) then +(x,)(*(y,)(z,),); (B(m, n,)) then -(m,)(n,)›; let s = B(1, 2,); let u = if s is ‹(A(x, y, z,)) then 3; (B(m, n,)) then 4›; +(r,)(u,)}; fun bar = () => {complex_foo(A(6, 7, 8,),); complex_foo(B(9, 10,),)}; bar()}
//│ Parsed:
//│ TypingUnit(NuTypeDef(class, A, (), Tup(_: Var(x), _: Var(y), _: Var(z)), (), None, None, TypingUnit()), NuTypeDef(class, B, (), Tup(_: Var(m), _: Var(n)), (), None, None, TypingUnit()), NuFunDef(None, complex_foo, None, [], Lam(Tup(_: Var(t)), Blk(...))), NuFunDef(None, bar, None, [], Lam(Tup(), Blk(...))), App(Var(bar), Tup()))
//│ 
//│ GraphOpt:
//│ GOProgram({ClassInfo(0, A, [x,y,z]),ClassInfo(1, B, [m,n])}, {
//│ Def(0, complex_foo, [_t0], [{}], 
//│ None, 1, 
//│ let join _j0(_x8) = let _x9 = B(1,2)
//│       in let join _j1(_x15) = let _x16 = +(_x8,_x15)
//│             in _x16
//│         in case _x9 of
//│           A => let _x10 = _x9.z
//│             in let _x11 = _x9.y
//│               in let _x12 = _x9.x
//│                 in jump _j1(3)
//│           B => let _x13 = _x9.n
//│             in let _x14 = _x9.m
//│               in jump _j1(4)
//│   in case _t0 of
//│     A => let _x0 = _t0.z
//│       in let _x1 = _t0.y
//│         in let _x2 = _t0.x
//│           in let _x3 = *(_x1,_x0)
//│             in let _x4 = +(_x2,_x3)
//│               in jump _j0(_x4)
//│     B => let _x5 = _t0.n
//│       in let _x6 = _t0.m
//│         in let _x7 = -(_x6,_x5)
//│           in jump _j0(_x7)
//│ )
//│ Def(1, bar, [], [{}], 
//│ None, 1, 
//│ let _x17 = A(6,7,8)
//│   in let* (_x18) = complex_foo(_x17)
//│     in let _x19 = B(9,10)
//│       in let* (_x20) = complex_foo(_x19)
//│         in _x20
//│ )
//│ },
//│ let* (_x21) = bar()
//│   in _x21)
//│ 
//│ Promoted ------------------------------------
//│ GOProgram({ClassInfo(0, A, [x,y,z]),ClassInfo(1, B, [m,n])}, {
//│ Def(0, complex_foo, [_t0], [{ESelect(m)，ESelect(y)，ESelect(n)，ESelect(z)，EDestruct，EDirect，ESelect(x)}], 
//│ None, 1, 
//│ case _t0 of
//│   A => let _x0 = _t0.z
//│     in let _x1 = _t0.y
//│       in let _x2 = _t0.x
//│         in let _x3 = *(_x1,_x0)
//│           in let _x4 = +(_x2,_x3)
//│             in jump _j0(_x4)
//│   B => let _x5 = _t0.n
//│     in let _x6 = _t0.m
//│       in let _x7 = -(_x6,_x5)
//│         in jump _j0(_x7)
//│ )
//│ Def(1, bar, [], [], 
//│ None, 1, 
//│ let _x17 = A(6,7,8)
//│   in let* (_x18) = complex_foo(_x17)
//│     in let _x19 = B(9,10)
//│       in let* (_x20) = complex_foo(_x19)
//│         in _x20
//│ )
//│ Def(2, @join _j0, [_x8], [{EDirect}], 
//│ None, 1, 
//│ let _x9 = B(1,2)
//│   in case _x9 of
//│     A => jump _j1(3)
//│     B => jump _j1(4)
//│ )
//│ Def(3, @join _j1, [_x15], [{EDirect}], 
//│ None, 1, 
//│ let _x16 = +(_x8,_x15)
//│   in _x16
//│ )
//│ },
//│ let* (_x21) = bar()
//│   in _x21)
//│ 
//│ Interpreted ------------------------------
//│ 4
//│ 
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, A, [x,y,z]),ClassInfo(1, B, [m,n])}, {
//│ Def(1, bar, [], [], 
//│ None, 1, 
//│ let* (_x18) = __complex_foo$D0$S0(8,7,6)
//│   in let* (_x20) = __complex_foo$D1$S0(10,9)
//│     in _x20
//│ )
//│ Def(2, @join _j0, [_x8], [{EDirect}], 
//│ None, 1, 
//│ let _x9 = B(1,2)
//│   in case _x9 of
//│     A => jump _j1(3)
//│     B => jump _j1(4)
//│ )
//│ Def(3, @join _j1, [_x15], [{EDirect}], 
//│ None, 1, 
//│ let _x16 = +(_x8,_x15)
//│   in _x16
//│ )
//│ Def(7, __complex_foo$D0$S0, [_t0_z,_t0_y,_t0_x], [{EDirect},{EDirect},{EDirect}], 
//│ None, 1, 
//│ let _x3 = *(_t0_y,_t0_z)
//│   in let _x4 = +(_t0_x,_x3)
//│     in jump _j0(_x4)
//│ )
//│ Def(8, __complex_foo$D1$S0, [_t0_n,_t0_m], [{EDirect},{EDirect}], 
//│ None, 1, 
//│ let _x7 = -(_t0_m,_t0_n)
//│   in jump _j0(_x7)
//│ )
//│ },
//│ let* (_x21) = bar()
//│   in _x21)
//│ 
//│ 
//│ Interpreted ------------------------------
//│ 4

:GraphOpt
class A(w, x)
class B(y)
class C(z)
fun complex_foo(t) =
  let a = 1 + 2
  let b = 1 * 2
  let x = if t is
    A(x, y) then y
    B(x) then B(x + b)
    C(x) then C(0)
  let z = A(5, x)
  let v = B(6)
  let y = if x is
    A(x, y) then
      let m = x + a + b
      if y is
        A(x, y) then x
        B(x) then m
        C(x) then 0
    B(x) then 2
    C(x) then 3
  if z is
    A(x, y) then x
    B(x) then 4
    C(x) then
      if v is
        A(x, y) then x
        B(x) then 7
        C(x) then 8
fun bar() =
  complex_foo(A(10, A(9, B(10))))
bar()
//│ |#class| |A|(|w|,| |x|)|↵|#class| |B|(|y|)|↵|#class| |C|(|z|)|↵|#fun| |complex_foo|(|t|)| |#=|→|#let| |a| |#=| |1| |+| |2|↵|#let| |b| |#=| |1| |*| |2|↵|#let| |x| |#=| |#if| |t| |is|→|A|(|x|,| |y|)| |#then| |y|↵|B|(|x|)| |#then| |B|(|x| |+| |b|)|↵|C|(|x|)| |#then| |C|(|0|)|←|↵|#let| |z| |#=| |A|(|5|,| |x|)|↵|#let| |v| |#=| |B|(|6|)|↵|#let| |y| |#=| |#if| |x| |is|→|A|(|x|,| |y|)| |#then|→|#let| |m| |#=| |x| |+| |a| |+| |b|↵|#if| |y| |is|→|A|(|x|,| |y|)| |#then| |x|↵|B|(|x|)| |#then| |m|↵|C|(|x|)| |#then| |0|←|←|↵|B|(|x|)| |#then| |2|↵|C|(|x|)| |#then| |3|←|↵|#if| |z| |is|→|A|(|x|,| |y|)| |#then| |x|↵|B|(|x|)| |#then| |4|↵|C|(|x|)| |#then|→|#if| |v| |is|→|A|(|x|,| |y|)| |#then| |x|↵|B|(|x|)| |#then| |7|↵|C|(|x|)| |#then| |8|←|←|←|←|↵|#fun| |bar|(||)| |#=|→|complex_foo|(|A|(|10|,| |A|(|9|,| |B|(|10|)|)|)|)|←|↵|bar|(||)|
//│ Parsed: {class A(w, x,) {}; class B(y,) {}; class C(z,) {}; fun complex_foo = (t,) => {let a = +(1,)(2,); let b = *(1,)(2,); let x = if t is ‹(A(x, y,)) then y; (B(x,)) then B(+(x,)(b,),); (C(x,)) then C(0,)›; let z = A(5, x,); let v = B(6,); let y = if x is ‹(A(x, y,)) then {let m = +(+(x,)(a,),)(b,); if y is ‹(A(x, y,)) then x; (B(x,)) then m; (C(x,)) then 0›}; (B(x,)) then 2; (C(x,)) then 3›; if z is ‹(A(x, y,)) then x; (B(x,)) then 4; (C(x,)) then {if v is ‹(A(x, y,)) then x; (B(x,)) then 7; (C(x,)) then 8›}›}; fun bar = () => {complex_foo(A(10, A(9, B(10,),),),)}; bar()}
//│ Parsed:
//│ TypingUnit(NuTypeDef(class, A, (), Tup(_: Var(w), _: Var(x)), (), None, None, TypingUnit()), NuTypeDef(class, B, (), Tup(_: Var(y)), (), None, None, TypingUnit()), NuTypeDef(class, C, (), Tup(_: Var(z)), (), None, None, TypingUnit()), NuFunDef(None, complex_foo, None, [], Lam(Tup(_: Var(t)), Blk(...))), NuFunDef(None, bar, None, [], Lam(Tup(), Blk(...))), App(Var(bar), Tup()))
//│ 
//│ GraphOpt:
//│ GOProgram({ClassInfo(0, A, [w,x]),ClassInfo(1, B, [y]),ClassInfo(2, C, [z])}, {
//│ Def(0, complex_foo, [_t0], [{}], 
//│ None, 1, 
//│ let _x0 = +(1,2)
//│   in let _x1 = *(1,2)
//│     in let join _j0(_x9) = let _x10 = A(5,_x9)
//│           in let _x11 = B(6)
//│             in let join _j1(_x23) = let join _j3(_x33) = _x33
//│                   in case _x10 of
//│                     A => let _x24 = _x10.x
//│                       in let _x25 = _x10.w
//│                         in jump _j3(_x25)
//│                     B => let _x26 = _x10.y
//│                       in jump _j3(4)
//│                     C => let _x27 = _x10.z
//│                       in let join _j4(_x32) = jump _j3(_x32)
//│                         in case _x11 of
//│                           A => let _x28 = _x11.x
//│                             in let _x29 = _x11.w
//│                               in jump _j4(_x29)
//│                           B => let _x30 = _x11.y
//│                             in jump _j4(7)
//│                           C => let _x31 = _x11.z
//│                             in jump _j4(8)
//│               in case _x9 of
//│                 A => let _x12 = _x9.x
//│                   in let _x13 = _x9.w
//│                     in let _x14 = +(_x13,_x0)
//│                       in let _x15 = +(_x14,_x1)
//│                         in let join _j2(_x20) = jump _j1(_x20)
//│                           in case _x12 of
//│                             A => let _x16 = _x12.x
//│                               in let _x17 = _x12.w
//│                                 in jump _j2(_x17)
//│                             B => let _x18 = _x12.y
//│                               in jump _j2(_x15)
//│                             C => let _x19 = _x12.z
//│                               in jump _j2(0)
//│                 B => let _x21 = _x9.y
//│                   in jump _j1(2)
//│                 C => let _x22 = _x9.z
//│                   in jump _j1(3)
//│       in case _t0 of
//│         A => let _x2 = _t0.x
//│           in let _x3 = _t0.w
//│             in jump _j0(_x2)
//│         B => let _x4 = _t0.y
//│           in let _x5 = +(_x4,_x1)
//│             in let _x6 = B(_x5)
//│               in jump _j0(_x6)
//│         C => let _x7 = _t0.z
//│           in let _x8 = C(0)
//│             in jump _j0(_x8)
//│ )
//│ Def(1, bar, [], [{}], 
//│ None, 1, 
//│ let _x34 = B(10)
//│   in let _x35 = A(9,_x34)
//│     in let _x36 = A(10,_x35)
//│       in let* (_x37) = complex_foo(_x36)
//│         in _x37
//│ )
//│ },
//│ let* (_x38) = bar()
//│   in _x38)
//│ 
//│ Promoted ------------------------------------
//│ GOProgram({ClassInfo(0, A, [w,x]),ClassInfo(1, B, [y]),ClassInfo(2, C, [z])}, {
//│ Def(0, complex_foo, [_t0], [{EDestruct，EDirect，ESelect(x)，ESelect(y)}], 
//│ None, 1, 
//│ let _x0 = +(1,2)
//│   in let _x1 = *(1,2)
//│     in case _t0 of
//│       A => let _x2 = _t0.x
//│         in jump _j0(_x2)
//│       B => let _x4 = _t0.y
//│         in let _x5 = +(_x4,_x1)
//│           in let _x6 = B(_x5)
//│             in jump _j0(_x6)
//│       C => let _x8 = C(0)
//│         in jump _j0(_x8)
//│ )
//│ Def(1, bar, [], [], 
//│ None, 1, 
//│ let _x34 = B(10)
//│   in let _x35 = A(9,_x34)
//│     in let _x36 = A(10,_x35)
//│       in let* (_x37) = complex_foo(_x36)
//│         in _x37
//│ )
//│ Def(2, @join _j0, [_x9], [{EDirect，EDestruct，ESelect(x)，ESelect(w)}], 
//│ None, 1, 
//│ let _x10 = A(5,_x9)
//│   in let _x11 = B(6)
//│     in case _x9 of
//│       A => let _x12 = _x9.x
//│         in let _x13 = _x9.w
//│           in let _x14 = +(_x13,_x0)
//│             in let _x15 = +(_x14,_x1)
//│               in case _x12 of
//│                 A => let _x17 = _x12.w
//│                   in jump _j2(_x17)
//│                 B => jump _j2(_x15)
//│                 C => jump _j2(0)
//│       B => jump _j1(2)
//│       C => jump _j1(3)
//│ )
//│ Def(3, @join _j1, [_x23], [{}], 
//│ None, 1, 
//│ case _x10 of
//│   A => let _x25 = _x10.w
//│     in _x25
//│   B => 4
//│   C => case _x11 of
//│     A => let _x29 = _x11.w
//│       in _x29
//│     B => 7
//│     C => 8
//│ )
//│ Def(6, @join _j2, [_x20], [{EDirect}], 
//│ None, 1, 
//│ jump _j1(_x20)
//│ )
//│ },
//│ let* (_x38) = bar()
//│   in _x38)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, A, [w,x]),ClassInfo(1, B, [y]),ClassInfo(2, C, [z])}, {
//│ Def(1, bar, [], [], 
//│ None, 1, 
//│ let _x34 = B(10)
//│   in let _x35 = A(9,_x34)
//│     in let _x36 = A(10,_x35)
//│       in let* (_x49,_x50,_x51) = _complex_foo$P0(_x36)
//│         in let* (_x37) = _complex_foo$D0(_x49,_x50,_x51)
//│           in _x37
//│ )
//│ Def(2, @join _j0, [_x9], [{EDirect，EDestruct，ESelect(x)，ESelect(w)}], 
//│ None, 1, 
//│ let _x10 = A(5,_x9)
//│   in let _x11 = B(6)
//│     in case _x9 of
//│       A => let _x12 = _x9.x
//│         in let _x13 = _x9.w
//│           in let _x14 = +(_x13,_x0)
//│             in let _x15 = +(_x14,_x1)
//│               in case _x12 of
//│                 A => let _x17 = _x12.w
//│                   in jump _j2(_x17)
//│                 B => jump _j2(_x15)
//│                 C => jump _j2(0)
//│       B => jump _j1(2)
//│       C => jump _j1(3)
//│ )
//│ Def(3, @join _j1, [_x23], [{}], 
//│ None, 1, 
//│ case _x10 of
//│   A => let _x25 = _x10.w
//│     in _x25
//│   B => 4
//│   C => case _x11 of
//│     A => let _x29 = _x11.w
//│       in _x29
//│     B => 7
//│     C => 8
//│ )
//│ Def(6, @join _j2, [_x20], [{EDirect}], 
//│ None, 1, 
//│ jump _j1(_x20)
//│ )
//│ Def(7, _complex_foo$P0, [_t0], [{EDirect}], 
//│ None, 3, 
//│ let _x0 = +(1,2)
//│   in let _x1 = *(1,2)
//│     in _t0,_x0,_x1
//│ )
//│ Def(8, _complex_foo$D0, [_t0,_x0,_x1], [{ESelect(x)},{EDirect},{EDirect}], 
//│ None, 1, 
//│ let _x2 = _t0.x
//│   in jump _j0(_x2)
//│ )
//│ },
//│ let* (_x38) = bar()
//│   in _x38)

:GraphOpt
class A(w, x)
class B(y)
class C(z)
fun complex_foo(t) =
  let a = 1 + 2
  let b = 1 * 2
  let x = if t is
    A(x, y) then A(x, C(0))
    B(x) then B(x + b)
    C(x) then C(0)
  let z = A(5, x)
  let v = B(6)
  let y = if x is
    A(x, y) then
      let m = x + a + b
      if y is
        A(x, y) then x
        B(x) then m
        C(x) then 0
    B(x) then 2
    C(x) then 3
  if z is
    A(x, y) then x
    B(x) then 4
    C(x) then
      if v is
        A(x, y) then x
        B(x) then 7
        C(x) then 8
fun bar() =
  complex_foo(A(10, A(9, B(10))))
bar()
//│ |#class| |A|(|w|,| |x|)|↵|#class| |B|(|y|)|↵|#class| |C|(|z|)|↵|#fun| |complex_foo|(|t|)| |#=|→|#let| |a| |#=| |1| |+| |2|↵|#let| |b| |#=| |1| |*| |2|↵|#let| |x| |#=| |#if| |t| |is|→|A|(|x|,| |y|)| |#then| |A|(|x|,| |C|(|0|)|)|↵|B|(|x|)| |#then| |B|(|x| |+| |b|)|↵|C|(|x|)| |#then| |C|(|0|)|←|↵|#let| |z| |#=| |A|(|5|,| |x|)|↵|#let| |v| |#=| |B|(|6|)|↵|#let| |y| |#=| |#if| |x| |is|→|A|(|x|,| |y|)| |#then|→|#let| |m| |#=| |x| |+| |a| |+| |b|↵|#if| |y| |is|→|A|(|x|,| |y|)| |#then| |x|↵|B|(|x|)| |#then| |m|↵|C|(|x|)| |#then| |0|←|←|↵|B|(|x|)| |#then| |2|↵|C|(|x|)| |#then| |3|←|↵|#if| |z| |is|→|A|(|x|,| |y|)| |#then| |x|↵|B|(|x|)| |#then| |4|↵|C|(|x|)| |#then|→|#if| |v| |is|→|A|(|x|,| |y|)| |#then| |x|↵|B|(|x|)| |#then| |7|↵|C|(|x|)| |#then| |8|←|←|←|←|↵|#fun| |bar|(||)| |#=|→|complex_foo|(|A|(|10|,| |A|(|9|,| |B|(|10|)|)|)|)|←|↵|bar|(||)|
//│ Parsed: {class A(w, x,) {}; class B(y,) {}; class C(z,) {}; fun complex_foo = (t,) => {let a = +(1,)(2,); let b = *(1,)(2,); let x = if t is ‹(A(x, y,)) then A(x, C(0,),); (B(x,)) then B(+(x,)(b,),); (C(x,)) then C(0,)›; let z = A(5, x,); let v = B(6,); let y = if x is ‹(A(x, y,)) then {let m = +(+(x,)(a,),)(b,); if y is ‹(A(x, y,)) then x; (B(x,)) then m; (C(x,)) then 0›}; (B(x,)) then 2; (C(x,)) then 3›; if z is ‹(A(x, y,)) then x; (B(x,)) then 4; (C(x,)) then {if v is ‹(A(x, y,)) then x; (B(x,)) then 7; (C(x,)) then 8›}›}; fun bar = () => {complex_foo(A(10, A(9, B(10,),),),)}; bar()}
//│ Parsed:
//│ TypingUnit(NuTypeDef(class, A, (), Tup(_: Var(w), _: Var(x)), (), None, None, TypingUnit()), NuTypeDef(class, B, (), Tup(_: Var(y)), (), None, None, TypingUnit()), NuTypeDef(class, C, (), Tup(_: Var(z)), (), None, None, TypingUnit()), NuFunDef(None, complex_foo, None, [], Lam(Tup(_: Var(t)), Blk(...))), NuFunDef(None, bar, None, [], Lam(Tup(), Blk(...))), App(Var(bar), Tup()))
//│ 
//│ GraphOpt:
//│ GOProgram({ClassInfo(0, A, [w,x]),ClassInfo(1, B, [y]),ClassInfo(2, C, [z])}, {
//│ Def(0, complex_foo, [_t0], [{}], 
//│ None, 1, 
//│ let _x0 = +(1,2)
//│   in let _x1 = *(1,2)
//│     in let join _j0(_x11) = let _x12 = A(5,_x11)
//│           in let _x13 = B(6)
//│             in let join _j1(_x25) = let join _j3(_x35) = _x35
//│                   in case _x12 of
//│                     A => let _x26 = _x12.x
//│                       in let _x27 = _x12.w
//│                         in jump _j3(_x27)
//│                     B => let _x28 = _x12.y
//│                       in jump _j3(4)
//│                     C => let _x29 = _x12.z
//│                       in let join _j4(_x34) = jump _j3(_x34)
//│                         in case _x13 of
//│                           A => let _x30 = _x13.x
//│                             in let _x31 = _x13.w
//│                               in jump _j4(_x31)
//│                           B => let _x32 = _x13.y
//│                             in jump _j4(7)
//│                           C => let _x33 = _x13.z
//│                             in jump _j4(8)
//│               in case _x11 of
//│                 A => let _x14 = _x11.x
//│                   in let _x15 = _x11.w
//│                     in let _x16 = +(_x15,_x0)
//│                       in let _x17 = +(_x16,_x1)
//│                         in let join _j2(_x22) = jump _j1(_x22)
//│                           in case _x14 of
//│                             A => let _x18 = _x14.x
//│                               in let _x19 = _x14.w
//│                                 in jump _j2(_x19)
//│                             B => let _x20 = _x14.y
//│                               in jump _j2(_x17)
//│                             C => let _x21 = _x14.z
//│                               in jump _j2(0)
//│                 B => let _x23 = _x11.y
//│                   in jump _j1(2)
//│                 C => let _x24 = _x11.z
//│                   in jump _j1(3)
//│       in case _t0 of
//│         A => let _x2 = _t0.x
//│           in let _x3 = _t0.w
//│             in let _x4 = C(0)
//│               in let _x5 = A(_x3,_x4)
//│                 in jump _j0(_x5)
//│         B => let _x6 = _t0.y
//│           in let _x7 = +(_x6,_x1)
//│             in let _x8 = B(_x7)
//│               in jump _j0(_x8)
//│         C => let _x9 = _t0.z
//│           in let _x10 = C(0)
//│             in jump _j0(_x10)
//│ )
//│ Def(1, bar, [], [{}], 
//│ None, 1, 
//│ let _x36 = B(10)
//│   in let _x37 = A(9,_x36)
//│     in let _x38 = A(10,_x37)
//│       in let* (_x39) = complex_foo(_x38)
//│         in _x39
//│ )
//│ },
//│ let* (_x40) = bar()
//│   in _x40)
//│ 
//│ Promoted ------------------------------------
//│ GOProgram({ClassInfo(0, A, [w,x]),ClassInfo(1, B, [y]),ClassInfo(2, C, [z])}, {
//│ Def(0, complex_foo, [_t0], [{EDestruct，EDirect，ESelect(w)，ESelect(y)}], 
//│ None, 1, 
//│ let _x0 = +(1,2)
//│   in let _x1 = *(1,2)
//│     in case _t0 of
//│       A => let _x3 = _t0.w
//│         in let _x4 = C(0)
//│           in let _x5 = A(_x3,_x4)
//│             in jump _j0(_x5)
//│       B => let _x6 = _t0.y
//│         in let _x7 = +(_x6,_x1)
//│           in let _x8 = B(_x7)
//│             in jump _j0(_x8)
//│       C => let _x10 = C(0)
//│         in jump _j0(_x10)
//│ )
//│ Def(1, bar, [], [], 
//│ None, 1, 
//│ let _x36 = B(10)
//│   in let _x37 = A(9,_x36)
//│     in let _x38 = A(10,_x37)
//│       in let* (_x39) = complex_foo(_x38)
//│         in _x39
//│ )
//│ Def(2, @join _j0, [_x11], [{EDirect，EDestruct，ESelect(x)，ESelect(w)}], 
//│ None, 1, 
//│ let _x12 = A(5,_x11)
//│   in let _x13 = B(6)
//│     in case _x11 of
//│       A => let _x14 = _x11.x
//│         in let _x15 = _x11.w
//│           in let _x16 = +(_x15,_x0)
//│             in let _x17 = +(_x16,_x1)
//│               in case _x14 of
//│                 A => let _x19 = _x14.w
//│                   in jump _j2(_x19)
//│                 B => jump _j2(_x17)
//│                 C => jump _j2(0)
//│       B => jump _j1(2)
//│       C => jump _j1(3)
//│ )
//│ Def(3, @join _j1, [_x25], [{}], 
//│ None, 1, 
//│ case _x12 of
//│   A => let _x27 = _x12.w
//│     in _x27
//│   B => 4
//│   C => case _x13 of
//│     A => let _x31 = _x13.w
//│       in _x31
//│     B => 7
//│     C => 8
//│ )
//│ Def(6, @join _j2, [_x22], [{EDirect}], 
//│ None, 1, 
//│ jump _j1(_x22)
//│ )
//│ },
//│ let* (_x40) = bar()
//│   in _x40)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, A, [w,x]),ClassInfo(1, B, [y]),ClassInfo(2, C, [z])}, {
//│ Def(1, bar, [], [], 
//│ None, 1, 
//│ let _x36 = B(10)
//│   in let _x37 = A(9,_x36)
//│     in let _x38 = A(10,_x37)
//│       in let* (_x56,_x57,_x58) = _complex_foo$P0(_x38)
//│         in let* (_x39) = _complex_foo$D0(_x56,_x57,_x58)
//│           in _x39
//│ )
//│ Def(2, @join _j0, [_x11], [{EDirect，EDestruct，ESelect(x)，ESelect(w)}], 
//│ None, 1, 
//│ let _x12 = A(5,_x11)
//│   in let _x13 = B(6)
//│     in case _x11 of
//│       A => let _x14 = _x11.x
//│         in let _x15 = _x11.w
//│           in let _x16 = +(_x15,_x0)
//│             in let _x17 = +(_x16,_x1)
//│               in case _x14 of
//│                 A => let _x19 = _x14.w
//│                   in jump _j2(_x19)
//│                 B => jump _j2(_x17)
//│                 C => jump _j2(0)
//│       B => jump _j1(2)
//│       C => jump _j1(3)
//│ )
//│ Def(3, @join _j1, [_x25], [{}], 
//│ None, 1, 
//│ case _x12 of
//│   A => let _x27 = _x12.w
//│     in _x27
//│   B => 4
//│   C => case _x13 of
//│     A => let _x31 = _x13.w
//│       in _x31
//│     B => 7
//│     C => 8
//│ )
//│ Def(6, @join _j2, [_x22], [{EDirect}], 
//│ None, 1, 
//│ jump _j1(_x22)
//│ )
//│ Def(7, _complex_foo$P0, [_t0], [{EDirect}], 
//│ None, 3, 
//│ let _x0 = +(1,2)
//│   in let _x1 = *(1,2)
//│     in _t0,_x0,_x1
//│ )
//│ Def(8, _complex_foo$D0, [_t0,_x0,_x1], [{ESelect(w)},{EDirect},{EDirect}], 
//│ None, 1, 
//│ let _x3 = _t0.w
//│   in let _x4 = C(0)
//│     in let _x5 = A(_x3,_x4)
//│       in jump _j0(_x5)
//│ )
//│ },
//│ let* (_x40) = bar()
//│   in _x40)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, A, [w,x]),ClassInfo(1, B, [y]),ClassInfo(2, C, [z])}, {
//│ Def(1, bar, [], [], 
//│ None, 1, 
//│ let _x36 = B(10)
//│   in let _x37 = A(9,_x36)
//│     in let _x38 = A(10,_x37)
//│       in let* (_x56,_x57,_x58) = _complex_foo$P0(_x38)
//│         in let* (_x39) = _complex_foo$D0(_x56,_x57,_x58)
//│           in _x39
//│ )
//│ Def(3, @join _j1, [_x25], [{}], 
//│ None, 1, 
//│ case _x12 of
//│   A => let _x27 = _x12.w
//│     in _x27
//│   B => 4
//│   C => case _x13 of
//│     A => let _x31 = _x13.w
//│       in _x31
//│     B => 7
//│     C => 8
//│ )
//│ Def(6, @join _j2, [_x22], [{EDirect}], 
//│ None, 1, 
//│ jump _j1(_x22)
//│ )
//│ Def(7, _complex_foo$P0, [_t0], [{EDirect}], 
//│ None, 3, 
//│ let _x0 = +(1,2)
//│   in let _x1 = *(1,2)
//│     in _t0,_x0,_x1
//│ )
//│ Def(8, _complex_foo$D0, [_t0,_x0,_x1], [{ESelect(w)},{EDirect},{EDirect}], 
//│ None, 1, 
//│ let _x3 = _t0.w
//│   in let _x4 = C(0)
//│     in let _x5 = A(_x3,_x4)
//│       in let* (_x59,_x60,_x61,_x62,_x63) = __j0$P1(_x5)
//│         in jump __j0$D3(_x59,_x60,_x61,_x62,_x63)
//│ )
//│ Def(15, __j0$P1, [_x11], [{EDirect}], 
//│ Some(ICtor(B)), 5, 
//│ let _x12 = A(5,_x11)
//│   in let _x13 = B(6)
//│     in _x13,_x12,_x0,_x11,_x1
//│ )
//│ Def(16, @join __j0$D3, [_x13,_x12,_x0,_x11,_x1], [{EDestruct，EDirect，ESelect(w)},{EDestruct，EDirect，ESelect(w)},{EDirect},{ESelect(x)，ESelect(w)},{EDirect}], 
//│ None, 1, 
//│ let _x14 = _x11.x
//│   in let _x15 = _x11.w
//│     in let _x16 = +(_x15,_x0)
//│       in let _x17 = +(_x16,_x1)
//│         in case _x14 of
//│           A => let _x19 = _x14.w
//│             in jump _j2(_x19)
//│           B => jump _j2(_x17)
//│           C => jump _j2(0)
//│ )
//│ },
//│ let* (_x40) = bar()
//│   in _x40)
